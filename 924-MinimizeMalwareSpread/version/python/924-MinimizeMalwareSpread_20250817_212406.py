# Last updated: 8/17/2025, 9:24:06 PM
class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        edges = []

        for i in range (len(graph)) : 
            for j in range (len(graph[0])) : 
                if graph[i][j] == 1 : 
                    edges.append([i , j])
        
        self.parent = [0]*len(graph[0])
        self.rank = [1]*len(graph[0])

        for i in range (len(self.parent)) : 
            self.parent[i] = i
        
        for u , v in edges : 
            self.findUnion(u,v)
        
        size = [0]*len(graph)
        for i in range(len(graph)):
            root = self.findParent(i)
            size[root] += 1

        # Count infections per component
        infected = [0]*len(graph)
        initial.sort()
        for node in initial:
            root = self.findParent(node)
            infected[root] += 1

        # Choose best node to remove
        ans = min(initial)   # default answer
        best_size = -1
        for node in initial:
            root = self.findParent(node)
            if infected[root] == 1 and size[root] > best_size:  # unique infection
                # if size[root] > best_size or (size[root] == best_size and node < ans):
                best_size = size[root]
                ans = node

        return ans

        
    
    def findUnion(self , u : int , v : int) -> None : 

        parent_u = self.findParent(u)
        parent_v = self.findParent(v)

        if parent_u == parent_v : 
            return
        
        else : 
            if self.rank[parent_u] > self.rank[parent_v] : 
                self.parent[parent_v] = parent_u
            elif self.rank[parent_v] > self.rank[parent_u] :
                self.parent[parent_u] = parent_v
            else : 
                self.parent[parent_u] = parent_v 
                self.rank[parent_v] +=1
        
    
    def findParent(self , x : int) -> int :

        if self.parent[x] == x : 
            return x
        
        temp = self.findParent(self.parent[x])
        self.parent[x] = temp
        return temp
        
